<?php

namespace App\Http\Controllers;

use App\Models\Sanpham;
use Illuminate\Http\Request;

class SanphamController extends Controller
{
    /**
     * üõçÔ∏è Hi·ªÉn th·ªã danh s√°ch t·∫•t c·∫£ s·∫£n ph·∫©m
     */
    public function index()
    {
        $sanphams = Sanpham::with('danhmuc')->get();
        return response()->json($sanphams);
    }

    /**
     * ‚ûï Th√™m s·∫£n ph·∫©m m·ªõi
     */
    public function store(Request $request)
    {
        $validated = $request->validate([
            'danhmuc_id' => 'required|exists:danhmucs,id',
            'tensanpham' => 'required|string|max:255',
            'gia' => 'required|numeric|min:0',
            'hinhanh' => 'nullable|string',
            'mota' => 'nullable|string',
            'soluong' => 'required|integer|min:0',
        ]);

        $sanpham = Sanpham::create($validated);

        return response()->json([
            'message' => 'Th√™m s·∫£n ph·∫©m th√†nh c√¥ng!',
            'data' => $sanpham
        ], 201);
    }

    /**
     * Xem chi ti·∫øt 1 s·∫£n ph·∫©m
     */
    public function show($id)
    {
        $sanpham = Sanpham::with('danhmuc')->findOrFail($id);
        return response()->json($sanpham);
    }

    /**
     * C·∫≠p nh·∫≠t s·∫£n ph·∫©m
     */
    public function update(Request $request, $id)
    {
        $sanpham = Sanpham::findOrFail($id);

        $validated = $request->validate([
            'danhmuc_id' => 'required|exists:danhmucs,id',
            'tensanpham' => 'required|string|max:255',
            'gia' => 'required|numeric|min:0',
            'hinhanh' => 'nullable|string',
            'mota' => 'nullable|string',
            'soluong' => 'required|integer|min:0',
        ]);

        $sanpham->update($validated);

        return response()->json([
            'message' => 'C·∫≠p nh·∫≠t s·∫£n ph·∫©m th√†nh c√¥ng!',
            'data' => $sanpham
        ]);
    }

    /**
     * X√≥a s·∫£n ph·∫©m
     */
    public function destroy($id)
    {
        $sanpham = Sanpham::findOrFail($id);
        $sanpham->delete();

        return response()->json(['message' => 'X√≥a s·∫£n ph·∫©m th√†nh c√¥ng!']);
    }
}
